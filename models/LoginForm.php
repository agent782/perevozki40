<?php

namespace app\models;

use Yii;
use yii\base\Model;

/**
 * LoginForm is the model behind the login form.
 *
 * @property User|null $user This property is read-only.
 *
 */
class LoginForm extends Model
{
    public $username;
    public $password;
    public $rememberMe = true;

    private $_user = false;


    /**
     * @return array the validation rules.
     */
    public function rules()
    {
        return [
            // username and password are both required
            [['username', 'password'], 'required'],
            ['username', 'string', 'length' => [10], 'message' => 'Неверный формат номера','tooLong' => 'Неверный формат номера','tooShort' => 'Неверный формат номера'],
            // rememberMe must be a boolean value
            ['rememberMe', 'boolean'],
            // password is validated by validatePassword()
            ['password', 'validatePassword',],
            ['username', 'validateUsername'],

        ];
    }

    public function beforeValidate()
    {
        $this->username = mb_ereg_replace("[^0-9]",'',$this->username);
        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }

    public function attributeLabels(){
        return[
            'username' => 'Номер телефона',
            'email' => 'Адрес электронной почты',
            'password' => 'Пароль',
            'rememberMe' => 'Запомнить меня'

        ];
    }

    /**
     * Validates the password.
     * This method serves as the inline validation for password.
     *
     * @param string $attribute the attribute currently being validated
     * @param array $params the additional name-value pairs given in the rule
     */
    //Валидация юзернэйм на роль deleted
    public function validateUsername($attribute, $params){

        if (!$this->hasErrors()) {
            $user = $this->getUser();

            if ($user->status === 0) {
                $this->addError($attribute, 'Пользователь удалил свой аккаунт. Обратитесь к Администратору.');
            }
        }

    }


    public function validatePassword($attribute, $params)
    {
        if (!$this->hasErrors()) {
            $user = $this->getUser();

            if (!$user || !$user->validatePassword($this->password)) {
                $this->addError($attribute, 'Неверный "Номер телефона" или "Пароль".');
            }
        }
    }

    /**
     * Logs in a user using the provided username and password.
     * @return bool whether the user is logged in successfully
     */
    public function login()
    {
        if ($this->validate()) {
            return Yii::$app->user->login($this->getUser(), $this->rememberMe ? 3600*24*7 : 0);
        }
        return false;
    }

    /**
     * Finds user by [[username]]
     *
     * @return User|null
     */
    public function getUser()
    {
        if ($this->_user === false) {
            $this->_user = User::findByUsername($this->username);
        }

        return $this->_user;
    }
}
